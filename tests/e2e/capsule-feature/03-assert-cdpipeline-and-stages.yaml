apiVersion: v2.edp.epam.com/v1
kind: CDPipeline
metadata:
  name: mypipeline
  finalizers:
    - edp.epam.com/ownedStages
status:
  available: true
  value: active
spec:
  applications:
    - test
  applicationsToPromote:
    - test
  deploymentType: container
  inputDockerStreams:
    - test-main
  name: mypipeline
  description: mypipeline description

---
apiVersion: v2.edp.epam.com/v1
kind: Stage
metadata:
  name: mypipeline-dev
  labels:
    app.edp.epam.com/cdPipelineName: mypipeline
  finalizers:
    - envLabelDeletion
  ownerReferences:
    - apiVersion: v2.edp.epam.com/v1
      blockOwnerDeletion: true
      controller: true
      kind: CDPipeline
      name: mypipeline
status:
  available: true
  value: active
spec:
  cdPipeline: mypipeline
  clusterName: in-cluster
  description: Development Environment
  name: dev
  namespace: edp-mypipeline-dev
  order: 0
  qualityGates:
    - autotestName: null
      branchName: null
      qualityGateType: manual
      stepName: approve
  source:
    library:
      name: default
    type: default
  triggerType: Manual
  triggerTemplate: deploy

# Create CodebaseImageStream which stores verified (promoted) images
---
apiVersion: v2.edp.epam.com/v1
kind: CodebaseImageStream
metadata:
  name: mypipeline-dev-test-verified
  # we have autodeploy enabled for the next stage so this label will be added by the operator
  labels:
    mypipeline/qa: ''
spec:
  codebase: test
  imageName: registry.host.local/registry-space/test

# We've created namespace under the Tenant, so we need to check that namespace is created
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.edp.epam.com/tenant: edp
    capsule.clastix.io/tenant: edp-workload-edp
    kubernetes.io/metadata.name: edp-mypipeline-dev
  name: edp-mypipeline-dev
spec:
  finalizers:
  - kubernetes
status:
  phase: Active

### Let's ansure that all RBACs are created
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tenant-admin
  namespace: edp-mypipeline-dev
subjects:
  - kind: Group
    apiGroup: rbac.authorization.k8s.io
    name: edp-oidc-admins
  - kind: Group
    apiGroup: rbac.authorization.k8s.io
    name: edp-oidc-developers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin

# cd-pipeline-operator can manage Stage namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: capsule-edp-workload-edp-1-capsule-namespace-deleter
  namespace: edp-mypipeline-dev
  labels:
    capsule.clastix.io/tenant: edp-workload-edp
subjects:
  - kind: ServiceAccount
    name: edp-cd-pipeline-operator
    namespace: edp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capsule-namespace-deleter

# cd-pipeline-operator is admin in the Stage namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: capsule-edp-workload-edp-0-admin
  namespace: edp-mypipeline-dev
  labels:
    capsule.clastix.io/tenant: edp-workload-edp
subjects:
  - kind: ServiceAccount
    name: edp-cd-pipeline-operator
    namespace: edp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
### End of RBACs

## Stage with custom namespace and auto-deploy enabled
---
apiVersion: v2.edp.epam.com/v1
kind: Stage
metadata:
  name: mypipeline-qa
  labels:
    app.edp.epam.com/cdPipelineName: mypipeline
  finalizers:
    - envLabelDeletion
  ownerReferences:
    - apiVersion: v2.edp.epam.com/v1
      blockOwnerDeletion: true
      controller: true
      kind: CDPipeline
      name: mypipeline
status:
  available: true
  value: active
spec:
  cdPipeline: mypipeline
  clusterName: in-cluster
  description: QA Environment
  name: qa
  namespace: custom-namespace
  order: 1
  qualityGates:
    - autotestName: null
      branchName: null
      qualityGateType: manual
      stepName: approve
  source:
    library:
      name: default
    type: default
  triggerType: Auto
  triggerTemplate: deploy

---
apiVersion: v2.edp.epam.com/v1
kind: CodebaseImageStream
metadata:
  name: mypipeline-qa-test-verified
spec:
  codebase: test
  imageName: registry.host.local/registry-space/test

---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.edp.epam.com/tenant: edp
    capsule.clastix.io/tenant: edp-workload-edp
    kubernetes.io/metadata.name: custom-namespace
  name: custom-namespace
spec:
  finalizers:
  - kubernetes
status:
  phase: Active

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tenant-admin
  namespace: custom-namespace

---
apiVersion: capsule.clastix.io/v1beta2
kind: Tenant
metadata:
  name: edp-workload-edp
status:
  namespaces:
    - custom-namespace
    - edp-mypipeline-dev
  size: 2
  state: Active
spec:
  ingressOptions:
    hostnameCollisionScope: Disabled
  limitRanges: {}
  networkPolicies: {}
  owners:
    - clusterRoles:
        - admin
        - capsule-namespace-deleter
      kind: ServiceAccount
      name: system:serviceaccount:edp:edp-cd-pipeline-operator
  resourceQuotas:
    scope: Tenant

---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: mypipeline
  namespace: edp
  ownerReferences:
    - apiVersion: v2.edp.epam.com/v1
      kind: CDPipeline
      name: mypipeline
spec:
  generators:
    - list:
        elements:
          - cluster: in-cluster
            codebase: test
            gitUrlPath: test
            imageRepository: registry.host.local/registry-space/test
            imageTag: NaN
            namespace: edp-mypipeline-dev
            repoURL: ssh://git@gerrit-dev:30000/test
            stage: dev
            versionType: default
            customValues: false
          - cluster: in-cluster
            codebase: test
            gitUrlPath: test
            imageRepository: registry.host.local/registry-space/test
            imageTag: NaN
            namespace: custom-namespace
            repoURL: ssh://git@gerrit-dev:30000/test
            stage: qa
            versionType: default
            customValues: false
        template:
          metadata: {}
          spec:
            destination: {}
            project: ''
  goTemplate: true
  goTemplateOptions:
    - missingkey=error
  template:
    metadata:
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      labels:
        app.edp.epam.com/app-name: '{{ .codebase }}'
        app.edp.epam.com/pipeline: mypipeline
        app.edp.epam.com/stage: '{{ .stage }}'
      name: mypipeline-{{ .stage }}-{{ .codebase }}
    spec:
      destination:
        name: '{{ .cluster }}'
        namespace: '{{ .namespace }}'
      project: edp
      source:
        helm:
          parameters:
            - name: image.tag
              value: '{{ .imageTag }}'
            - name: image.repository
              value: '{{ .imageRepository }}'
          releaseName: '{{ .codebase }}'
        path: deploy-templates
        repoURL: '{{ .repoURL }}'
        targetRevision: >-
          {{ if eq .versionType "semver" }}build/{{ .imageTag }}{{ else }}{{
          .imageTag }}{{ end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mypipeline-dev

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mypipeline-qa
