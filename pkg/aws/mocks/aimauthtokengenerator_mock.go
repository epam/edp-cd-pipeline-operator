// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	aws "github.com/epam/edp-cd-pipeline-operator/v2/pkg/aws"
	mock "github.com/stretchr/testify/mock"
)

// MockAIMAuthTokenGenerator is an autogenerated mock type for the AIMAuthTokenGenerator type
type MockAIMAuthTokenGenerator struct {
	mock.Mock
}

type MockAIMAuthTokenGenerator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAIMAuthTokenGenerator) EXPECT() *MockAIMAuthTokenGenerator_Expecter {
	return &MockAIMAuthTokenGenerator_Expecter{mock: &_m.Mock}
}

// GetWithRole provides a mock function with given fields: clusterName, roleARN
func (_m *MockAIMAuthTokenGenerator) GetWithRole(clusterName string, roleARN string) (aws.Token, error) {
	ret := _m.Called(clusterName, roleARN)

	if len(ret) == 0 {
		panic("no return value specified for GetWithRole")
	}

	var r0 aws.Token
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (aws.Token, error)); ok {
		return rf(clusterName, roleARN)
	}
	if rf, ok := ret.Get(0).(func(string, string) aws.Token); ok {
		r0 = rf(clusterName, roleARN)
	} else {
		r0 = ret.Get(0).(aws.Token)
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(clusterName, roleARN)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockAIMAuthTokenGenerator_GetWithRole_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetWithRole'
type MockAIMAuthTokenGenerator_GetWithRole_Call struct {
	*mock.Call
}

// GetWithRole is a helper method to define mock.On call
//   - clusterName string
//   - roleARN string
func (_e *MockAIMAuthTokenGenerator_Expecter) GetWithRole(clusterName interface{}, roleARN interface{}) *MockAIMAuthTokenGenerator_GetWithRole_Call {
	return &MockAIMAuthTokenGenerator_GetWithRole_Call{Call: _e.mock.On("GetWithRole", clusterName, roleARN)}
}

func (_c *MockAIMAuthTokenGenerator_GetWithRole_Call) Run(run func(clusterName string, roleARN string)) *MockAIMAuthTokenGenerator_GetWithRole_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockAIMAuthTokenGenerator_GetWithRole_Call) Return(_a0 aws.Token, _a1 error) *MockAIMAuthTokenGenerator_GetWithRole_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAIMAuthTokenGenerator_GetWithRole_Call) RunAndReturn(run func(string, string) (aws.Token, error)) *MockAIMAuthTokenGenerator_GetWithRole_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAIMAuthTokenGenerator creates a new instance of MockAIMAuthTokenGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAIMAuthTokenGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAIMAuthTokenGenerator {
	mock := &MockAIMAuthTokenGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
